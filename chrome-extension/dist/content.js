(()=>{"use strict";class t{extract(t){try{if(t.id&&/^[a-zA-Z][\w-]*$/.test(t.id)){const e=`#${t.id}`;if(this.isUnique(e))return e}const e=["data-testid","data-test","data-cy","data-automation"];for(const n of e){const e=t.getAttribute(n);if(e){const t=`[${n}="${e}"]`;if(this.isUnique(t))return t}}if(t.classList.length>0){const e=`.${Array.from(t.classList).join(".")}`;if(this.isUnique(e))return e}const n=this.generateTagAttributeSelector(t);return n&&this.isUnique(n)?n:this.generateNthChildSelector(t)}catch(t){return console.warn("CssSelectorStrategy: Error extracting selector:",t),null}}getPriority(){return 90}isValid(t,e){try{return document.querySelector(t)===e}catch(t){return!1}}isUnique(t){try{return 1===document.querySelectorAll(t).length}catch(t){return!1}}generateTagAttributeSelector(t){const e=t.tagName.toLowerCase(),n=[],r=["name","type","value","placeholder","title","role","aria-label"];for(const e of r){const r=t.getAttribute(e);r&&r.length<50&&n.push(`[${e}="${r}"]`)}return n.length>0?`${e}${n.join("")}`:null}generateNthChildSelector(t){const e=[];let n=t;for(;n&&n.nodeType===Node.ELEMENT_NODE;){let t=n.tagName.toLowerCase();if(n.parentElement&&(t+=`:nth-child(${Array.from(n.parentElement.children).indexOf(n)+1})`),e.unshift(t),n=n.parentElement,e.length>=5)break}return e.join(" > ")}}class e{extract(t){try{const e=[];let n=t;for(;n&&n.nodeType===Node.ELEMENT_NODE;){const t=n.tagName.toLowerCase();if(n.id){e.unshift(`//${t}[@id='${n.id}']`);break}if(n.parentElement){const r=Array.from(n.parentElement.children).filter(t=>t.tagName===n.tagName);if(1===r.length)e.unshift(`/${t}`);else{const o=r.indexOf(n)+1;e.unshift(`/${t}[${o}]`)}}else e.unshift(`/${t}`);if(n=n.parentElement,e.length>=6)break}return e.length>0?"/"+e.join(""):null}catch(t){return console.warn("XPathSelectorStrategy: Error extracting selector:",t),null}}getPriority(){return 70}isValid(t,e){try{return document.evaluate(t,document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue===e}catch(t){return!1}}}class n{extract(t){try{const e=t.textContent?.trim();if(!e||e.length>100)return null;const n=`//*[normalize-space(text())='${e.replace(/'/g,"\\'")}']`;if(1===document.evaluate(n,document,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null).snapshotLength)return`text=${e}`;if(e.length>10){const t=e.slice(0,20),n=`//*[contains(normalize-space(text()),'${t.replace(/'/g,"\\'")}')]`;if(document.evaluate(n,document,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null).snapshotLength<=3)return`text*=${t}`}return null}catch(t){return console.warn("TextSelectorStrategy: Error extracting selector:",t),null}}getPriority(){return 60}isValid(t,e){try{const n=e.textContent?.trim();return!!n&&(t.startsWith("text=")?n===t.substring(5):!!t.startsWith("text*=")&&n.includes(t.substring(6)))}catch(t){return!1}}}class r{extract(t){try{const e=t.getAttribute("role"),n=t.getAttribute("aria-label");if(t.getAttribute("aria-labelledby"),e){let t=`[role="${e}"]`;if(n&&(t+=`[aria-label="${n}"]`),1===document.querySelectorAll(t).length)return t}const r=this.getImplicitRole(t);return r?`role=${r}`:null}catch(t){return console.warn("RoleSelectorStrategy: Error extracting selector:",t),null}}getPriority(){return 80}isValid(t,e){try{if(t.startsWith("role=")){const n=t.substring(5);return(e.getAttribute("role")||this.getImplicitRole(e))===n}return document.querySelector(t)===e}catch(t){return!1}}getImplicitRole(t){const e=t.tagName.toLowerCase();return"input"===e?this.getInputRole(t):{button:"button",a:"link",textarea:"textbox",select:"combobox",img:"img",h1:"heading",h2:"heading",h3:"heading",h4:"heading",h5:"heading",h6:"heading",nav:"navigation",main:"main",header:"banner",footer:"contentinfo",aside:"complementary",section:"region",article:"article"}[e]||null}getInputRole(t){return{button:"button",submit:"button",reset:"button",checkbox:"checkbox",radio:"radio",text:"textbox",password:"textbox",email:"textbox",search:"searchbox",tel:"textbox",url:"textbox",number:"spinbutton"}[(t.type||"text").toLowerCase()]||"textbox"}}class o{constructor(){this.strategies=[new t,new e,new n,new r].sort((t,e)=>e.getPriority()-t.getPriority())}extractSelectors(o){const i=[],s=this.getBoundingBox(o);for(const a of this.strategies)try{const c=a.extract(o);if(c){const l={confidence:this.calculateConfidence(c,o,a),boundingBox:s};a instanceof t?l.css=c:a instanceof e?l.xpath=c:a instanceof n?l.text=c:a instanceof r&&(l.role=c),l.attributes=this.extractRelevantAttributes(o),i.push(l)}}catch(t){console.warn("SelectorExtractor: Error with strategy:",a.constructor.name,t)}return 0===i.length&&i.push(this.createFallbackSelector(o,s)),i.sort((t,e)=>(e.confidence||0)-(t.confidence||0))}calculateConfidence(t,e,n){let r=n.getPriority();try{t.includes("#")&&e.id&&(r+=5),t.includes("data-")&&(r+=3),t.length>100&&(r-=10),t.length<30&&(r+=2),n.isValid(t,e)?r+=5:r-=20}catch(t){r-=15}return Math.max(0,Math.min(100,r))}getBoundingBox(t){const e=t.getBoundingClientRect();return{x:e.left+window.scrollX,y:e.top+window.scrollY,width:e.width,height:e.height}}extractRelevantAttributes(t){const e={},n=["id","class","name","type","value","placeholder","title","role","aria-label","data-testid","data-test","href","src"];for(const r of n){const n=t.getAttribute(r);n&&(e[r]=n)}return e.tagName=t.tagName.toLowerCase(),e}createFallbackSelector(t,e){return{css:t.tagName.toLowerCase(),text:t.textContent?.trim().slice(0,30)||void 0,attributes:this.extractRelevantAttributes(t),boundingBox:e,confidence:10}}}const i={maxWidth:800,maxHeight:600,quality:.8,format:"jpeg",highlight:!0};class s{constructor(t={}){this.config={...i,...t}}async captureElement(t,e=20){try{const n=t.getBoundingClientRect(),r={x:Math.max(0,n.left-e),y:Math.max(0,n.top-e),width:Math.min(window.innerWidth-n.left+e,n.width+2*e),height:Math.min(window.innerHeight-n.top+e,n.height+2*e)};this.isElementOutOfView(t)&&(t.scrollIntoView({behavior:"instant",block:"center",inline:"center"}),await this.sleep(100));let o=null;this.config.highlight&&(o=this.addElementHighlight(t));try{const t=await this.captureVisibleArea();if(t)return await this.cropScreenshot(t,r,this.config)}finally{o&&o.remove()}return null}catch(t){return console.error("ScreenshotCapture: Error capturing element screenshot:",t),null}}async captureVisible(){try{const t=await this.captureVisibleArea();return t?await this.resizeScreenshot(t,this.config):null}catch(t){return console.error("ScreenshotCapture: Error capturing visible screenshot:",t),null}}async captureFullPage(){try{return new Promise(t=>{chrome.runtime.sendMessage({type:"CAPTURE_FULL_PAGE"},e=>{t(e?.screenshot||null)})})}catch(t){return console.error("ScreenshotCapture: Error capturing full page screenshot:",t),null}}async captureWithHighlights(t){try{const e=[];for(const n of t){const t=this.addElementHighlight(n,"#3b82f6");t&&e.push(t)}try{return await this.captureVisible()}finally{e.forEach(t=>t.remove())}}catch(t){return console.error("ScreenshotCapture: Error capturing with highlights:",t),null}}async captureVisibleArea(){try{return new Promise(t=>{chrome.runtime.sendMessage({type:"CAPTURE_VISIBLE_TAB"},e=>{e?.error?(console.error("ScreenshotCapture: Background script error:",e.error),t(null)):t(e?.screenshot||null)})})}catch(t){return console.error("ScreenshotCapture: Error communicating with background script:",t),null}}isElementOutOfView(t){const e=t.getBoundingClientRect();return e.bottom<0||e.right<0||e.left>window.innerWidth||e.top>window.innerHeight}addElementHighlight(t,e="#ef4444"){try{const n=t.getBoundingClientRect(),r=document.createElement("div");return r.className="autoflow-element-highlight",r.style.cssText=`\n        position: fixed;\n        left: ${n.left}px;\n        top: ${n.top}px;\n        width: ${n.width}px;\n        height: ${n.height}px;\n        border: 2px solid ${e};\n        background-color: ${e}20;\n        pointer-events: none;\n        z-index: 999998;\n        box-sizing: border-box;\n        border-radius: 2px;\n      `,document.body.appendChild(r),r}catch(t){return console.warn("ScreenshotCapture: Error adding element highlight:",t),null}}async cropScreenshot(t,e,n){return new Promise((r,o)=>{try{const i=document.createElement("canvas"),s=i.getContext("2d");if(!s)return void o(new Error("Cannot get canvas context"));const a=new Image;a.onload=()=>{try{i.width=e.width,i.height=e.height,s.drawImage(a,e.x,e.y,e.width,e.height,0,0,e.width,e.height);const t=i.toDataURL(`image/${n.format}`,n.quality);r(t)}catch(t){o(t)}},a.onerror=()=>{o(new Error("Failed to load screenshot image"))},a.src=t}catch(t){o(t)}})}async resizeScreenshot(t,e){return new Promise((n,r)=>{try{const o=document.createElement("canvas"),i=o.getContext("2d");if(!i)return void r(new Error("Cannot get canvas context"));const s=new Image;s.onload=()=>{try{const{width:t,height:r}=this.calculateResizeDimensions(s.width,s.height,e.maxWidth,e.maxHeight);o.width=t,o.height=r,i.drawImage(s,0,0,t,r);const a=o.toDataURL(`image/${e.format}`,e.quality);n(a)}catch(t){r(t)}},s.onerror=()=>{r(new Error("Failed to load screenshot image"))},s.src=t}catch(t){r(t)}})}calculateResizeDimensions(t,e,n,r){if(t<=n&&e<=r)return{width:t,height:e};const o=n/t,i=r/e,s=Math.min(o,i);return{width:Math.floor(t*s),height:Math.floor(e*s)}}sleep(t){return new Promise(e=>setTimeout(e,t))}getScreenshotSize(t){const e=t.replace(/^data:image\/[a-z]+;base64,/,"");return Math.floor(3*e.length/4)}async compressIfNeeded(t,e=512e3){if(this.getScreenshotSize(t)<=e)return t;const n={...this.config,quality:Math.max(.3,.7*this.config.quality)};try{const r=await this.resizeScreenshot(t,n);return this.getScreenshotSize(r)<=e?r:await this.resizeScreenshot(r,{...n,maxWidth:Math.floor(.8*n.maxWidth),maxHeight:Math.floor(.8*n.maxHeight)})}catch(e){return console.warn("ScreenshotCapture: Error compressing screenshot:",e),t}}}const a={recordMouse:!0,recordKeyboard:!0,recordForms:!0,recordNavigation:!0,throttleTime:100,ignoreSelectors:[".autoflow-recording-indicator",".autoflow-element-highlight","[data-autoflow-ignore]"]};class c{constructor(t={}){this.listeners=[],this.lastEventTime=new Map,this.isActive=!1,this.config={...a,...t}}addListener(t){this.listeners.push(t)}removeListener(t){const e=this.listeners.indexOf(t);e>-1&&this.listeners.splice(e,1)}startRecording(){this.isActive=!0,this.lastEventTime.clear()}stopRecording(){this.isActive=!1,this.lastEventTime.clear()}shouldRecordEvent(t){if(!this.isActive)return!1;const e=t.target;if(!e)return!1;for(const t of this.config.ignoreSelectors)try{if(e.matches(t)||e.closest(t))return!1}catch(t){continue}return!!this.isEventTypeEnabled(t.type)&&!this.isEventThrottled(t)&&this.applyEventSpecificFilters(t)}processEvent(t){if(!this.shouldRecordEvent(t))return;const e={type:t.type,target:t.target,timestamp:Date.now(),data:this.extractEventData(t),shouldRecord:!0},n=this.getEventKey(t);this.lastEventTime.set(n,e.timestamp),this.listeners.forEach(t=>{try{t.onEvent(e)}catch(t){console.error("EventRecorder: Error in event listener:",t)}})}isEventTypeEnabled(t){return["click","dblclick","mousedown","mouseup","mousemove"].includes(t)?this.config.recordMouse:["keydown","keyup","keypress"].includes(t)?this.config.recordKeyboard:["input","change","submit","focus","blur"].includes(t)?this.config.recordForms:!["beforeunload","unload","popstate","hashchange"].includes(t)||this.config.recordNavigation}isEventThrottled(t){const e=this.getEventKey(t),n=this.lastEventTime.get(e);return!!n&&Date.now()-n<this.config.throttleTime}getEventKey(t){const e=t.target,n=e.tagName||"unknown",r=e.id||"",o=e.className||"";return`${t.type}_${n}_${r}_${o}`}applyEventSpecificFilters(t){switch(t.type){case"mousemove":return this.shouldRecordMouseMove(t);case"click":return this.shouldRecordClick(t);case"keydown":case"keyup":return this.shouldRecordKeyboard(t);case"input":return this.shouldRecordInput(t);case"scroll":return this.shouldRecordScroll(t);default:return!0}}shouldRecordMouseMove(t){const e=t.target;return t.buttons>0||["button","a","input","select","textarea"].includes(e.tagName.toLowerCase())}shouldRecordClick(t){const e=t.target;if(0!==t.button)return!1;const n=this.elementHasClickHandler(e);return["a","button","input","select","textarea","label"].includes(e.tagName.toLowerCase())||n||"button"===e.getAttribute("role")}shouldRecordKeyboard(t){const e=t.target,n=e.hasAttribute("contenteditable");return!(!["input","textarea"].includes(e.tagName.toLowerCase())&&!n)||["Enter","Tab","Escape","ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(t.key)}shouldRecordInput(t){const e=t.target;return"password"===e.type||"range"!==e.type}shouldRecordScroll(t){return!0}elementHasClickHandler(t){if("pointer"===window.getComputedStyle(t).cursor)return!0;const e=["onclick","data-action","data-click","data-toggle"];for(const n of e)if(t.hasAttribute(n))return!0;const n=["btn","button","clickable","link","action"],r=t.className.toLowerCase();for(const t of n)if(r.includes(t))return!0;return!1}extractEventData(t){const e={type:t.type,timestamp:t.timeStamp,bubbles:t.bubbles,cancelable:t.cancelable};switch(t.type){case"click":case"mousedown":case"mouseup":const n=t;return{...e,clientX:n.clientX,clientY:n.clientY,button:n.button,buttons:n.buttons,ctrlKey:n.ctrlKey,shiftKey:n.shiftKey,altKey:n.altKey,metaKey:n.metaKey};case"keydown":case"keyup":case"keypress":const r=t;return{...e,key:r.key,code:r.code,keyCode:r.keyCode,ctrlKey:r.ctrlKey,shiftKey:r.shiftKey,altKey:r.altKey,metaKey:r.metaKey};case"input":case"change":const o=t.target;return{...e,value:o.value,type:o.type,name:o.name,id:o.id};case"focus":case"blur":const i=t.target;return{...e,tagName:i.tagName,type:i.type,name:i.name,id:i.id};case"submit":const s=t.target;return{...e,action:s.action,method:s.method,id:s.id,name:s.name};case"scroll":return{...e,scrollX:window.scrollX,scrollY:window.scrollY,scrollWidth:document.body.scrollWidth,scrollHeight:document.body.scrollHeight};default:return e}}}class l{constructor(){this.isRecording=!1,this.recordingSessionId=null,this.stepCounter=0,this.stepCounterSyncInterval=null,this.selectorExtractor=new o,this.screenshotCapture=new s,this.eventRecorder=new c,this.setupEventListeners(),this.setupMessageHandlers(),this.initializeRecordingState()}setupEventListeners(){let t;document.addEventListener("click",this.handleClickEvent.bind(this),{capture:!0,passive:!0}),document.addEventListener("input",this.handleInputEvent.bind(this),{capture:!0,passive:!0}),window.addEventListener("beforeunload",this.handleNavigationEvent.bind(this));let e={x:window.scrollX,y:window.scrollY},n=0;document.addEventListener("scroll",()=>{const r=Date.now(),o=window.scrollX,i=window.scrollY;(Math.sqrt(Math.pow(o-e.x,2)+Math.pow(i-e.y,2))>50||r-n>100)&&(clearTimeout(t),t=setTimeout(()=>{this.handleScrollEvent.bind(this)(),e={x:window.scrollX,y:window.scrollY},n=Date.now()},50))},{passive:!0}),document.addEventListener("submit",this.handleSubmitEvent.bind(this),{capture:!0,passive:!0}),document.addEventListener("focus",this.handleFocusEvent.bind(this),{capture:!0,passive:!0})}setupMessageHandlers(){chrome.runtime.onMessage.addListener((t,e,n)=>(this.handleMessage(t,e,n),!0))}async initializeRecordingState(){try{const t=await chrome.storage.local.get(["isRecording","recordingSessionId"]);this.isRecording=t.isRecording||!1,this.recordingSessionId=t.recordingSessionId||null,this.isRecording&&(this.showRecordingIndicator().catch(t=>{console.error("AutoFlow: Error showing recording indicator:",t)}),this.startStepCounterSync())}catch(t){console.error("AutoFlow: Failed to initialize recording state:",t)}}async handleMessage(t,e,n){try{switch(t.type){case"START_RECORDING":await this.startRecording(t.sessionId),n({success:!0});break;case"STOP_RECORDING":await this.stopRecording(),n({success:!0});break;case"GET_RECORDING_STATE":n({isRecording:this.isRecording,sessionId:this.recordingSessionId,stepCount:this.stepCounter});break;case"CAPTURE_SCREENSHOT":const e=await this.screenshotCapture.captureVisible();n({screenshot:e});break;case"EXTRACT_SELECTORS":const r=this.selectorExtractor.extractSelectors(t.element);n({selectors:r});break;case"SIDEBAR_STATUS":try{chrome.runtime.sendMessage({type:"SIDEBAR_STATUS"},t=>{t&&void 0!==t.injected?n(t):n({injected:!1,sidebarActive:!1})})}catch{n({injected:!1,sidebarActive:!1})}break;case"HIDE_RECORDING_INDICATOR":this.hideRecordingIndicator(),n({success:!0})}}catch(t){console.error("AutoFlow: Error handling message:",t),n({error:t?.message||"Unknown error"})}}async startRecording(t){this.isRecording=!0,this.recordingSessionId=t,this.stepCounter=0,await chrome.storage.local.set({isRecording:!0,recordingSessionId:t}),this.showRecordingIndicator().catch(t=>{console.error("AutoFlow: Error showing recording indicator:",t)}),this.startStepCounterSync(),await this.recordPageLoad(),console.log("AutoFlow: Recording started for session:",t)}async stopRecording(){this.isRecording=!1;const t=this.recordingSessionId;this.recordingSessionId=null,await chrome.storage.local.remove(["isRecording","recordingSessionId"]),this.hideRecordingIndicator(),this.stopStepCounterSync(),console.log("AutoFlow: Recording stopped for session:",t)}async handleClickEvent(t){if(!this.isRecording||!t.target)return;const e=t.target;if(!e.closest(".autoflow-recording-indicator"))try{this.highlightElement(e);const n=await this.createTraceStep(e,"click",t);await this.saveTraceStep(n),this.updateStepCounter(),console.log("AutoFlow: Click recorded:",{element:e.tagName,text:e.textContent?.slice(0,50),step:this.stepCounter})}catch(t){console.error("AutoFlow: Error recording click event:",t)}}async handleInputEvent(t){if(!this.isRecording||!t.target)return;const e=t.target;if(!e.type||["text","email","password","search","tel","url"].includes(e.type))try{this.highlightElement(e);const n=await this.createTraceStep(e,"input",t);await this.saveTraceStep(n),this.updateStepCounter(),console.log("AutoFlow: Input recorded:",{element:e.tagName,type:e.type,placeholder:e.placeholder,step:this.stepCounter})}catch(t){console.error("AutoFlow: Error recording input event:",t)}}async handleScrollEvent(){if(this.isRecording)try{const t=Math.round(window.scrollX/(document.body.scrollWidth-window.innerWidth)*100)||0,e=Math.round(window.scrollY/(document.body.scrollHeight-window.innerHeight)*100)||0,n={id:this.generateStepId(),tabId:await this.getCurrentTabId(),url:window.location.href,action:"scroll",selectors:[],scrollPosition:{x:window.scrollX,y:window.scrollY,pageHeight:document.body.scrollHeight,pageWidth:document.body.scrollWidth,percentX:t,percentY:e},timestamp:Date.now(),metadata:{description:`Scrolled to ${e}% of page (${window.scrollX}, ${window.scrollY})`,tags:["scroll"],scrollDirection:this.getScrollDirection()}};await this.saveTraceStep(n),this.updateStepCounter(),console.log("AutoFlow: Scroll recorded:",{position:`(${window.scrollX}, ${window.scrollY})`,percentage:`${e}%`,step:this.stepCounter})}catch(t){console.error("AutoFlow: Error recording scroll event:",t)}}getScrollDirection(){const t=window.scrollY,e=window.scrollX;return t>0&&0===e?"down":0===t&&0===e?"top":e>0&&0===t?"right":0===e&&0===t?"top-left":"diagonal"}async handleSubmitEvent(t){if(!this.isRecording||!t.target)return;const e=t.target;try{const n=await this.createTraceStep(e,"click",t);n.metadata={...n.metadata,description:"Form submission",tags:["form","submit"],critical:!0},await this.saveTraceStep(n)}catch(t){console.error("AutoFlow: Error recording form submission:",t)}}async handleNavigationEvent(){if(this.isRecording)try{const t={id:this.generateStepId(),tabId:await this.getCurrentTabId(),url:window.location.href,action:"navigate",selectors:[],timestamp:Date.now(),metadata:{description:`Navigating away from ${window.location.href}`,tags:["navigation"]}};await this.saveTraceStep(t)}catch(t){console.error("AutoFlow: Error recording navigation event:",t)}}async handleFocusEvent(t){if(!this.isRecording||!t.target)return;const e=t.target;["input","textarea","select","button"].includes(e.tagName.toLowerCase())&&console.log("AutoFlow: Focus detected on:",e)}async recordPageLoad(){try{const t={id:this.generateStepId(),tabId:await this.getCurrentTabId(),url:window.location.href,action:"navigate",selectors:[],domHash:await this.generateDOMHash(),timestamp:Date.now(),metadata:{description:`Page loaded: ${document.title}`,tags:["page_load","navigation"],critical:!0}},e=await this.screenshotCapture.captureVisible();e&&(t.thumbnailRef=await this.saveScreenshot(e)),await this.saveTraceStep(t)}catch(t){console.error("AutoFlow: Error recording page load:",t)}}async createTraceStep(t,e,n){const r=this.selectorExtractor.extractSelectors(t),o=(t.getBoundingClientRect(),{id:this.generateStepId(),tabId:await this.getCurrentTabId(),url:window.location.href,action:e,selectors:r,scrollPosition:{x:window.scrollX,y:window.scrollY,pageHeight:document.body.scrollHeight,pageWidth:document.body.scrollWidth},domHash:await this.generateDOMHash(),timestamp:Date.now(),metadata:{description:this.generateStepDescription(t,e),tags:this.generateStepTags(t,e)}});"input"===e&&void 0!==t.value&&(o.inputData=this.extractInputData(t));const i=await this.screenshotCapture.captureElement(t);return i&&(o.thumbnailRef=await this.saveScreenshot(i)),o}extractInputData(t){const e={value:t.value,type:this.mapInputType(t.type),source:"static",sensitive:"password"===t.type};return e.sensitive&&(e.value="[MASKED]"),e}mapInputType(t){return{text:"text",email:"email",password:"password",number:"number",tel:"text",url:"text",search:"text",date:"date",file:"file"}[t]||"text"}generateStepDescription(t,e){const n=t.textContent?.trim().slice(0,50)||"",r=t.tagName.toLowerCase();switch(e){case"click":return`Clicked ${r}${n?': "'+n+'"':""}`;case"input":const o=t.placeholder;return`Entered text in ${r}${o?" ("+o+")":""}`;default:return`Performed ${e} on ${r}`}}generateStepTags(t,e){const n=[e];return t.tagName&&n.push(t.tagName.toLowerCase()),t.classList.length>0&&n.push("has-class"),t.id&&n.push("has-id"),t.closest("form")&&n.push("form-element"),n}async saveTraceStep(t){try{await chrome.runtime.sendMessage({type:"SAVE_TRACE_STEP",sessionId:this.recordingSessionId,step:t}),console.log("AutoFlow: Step recorded:",t)}catch(t){console.error("AutoFlow: Error saving trace step:",t)}}async saveScreenshot(t){const e=`screenshot_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return await chrome.storage.local.set({[`screenshot_${e}`]:t}),e}generateStepId(){return`step_${Date.now()}_${this.stepCounter}_${Math.random().toString(36).substr(2,9)}`}async getCurrentTabId(){return new Promise(t=>{chrome.runtime.sendMessage({type:"GET_CURRENT_TAB"},e=>{t(e?.tabId||0)})})}async generateDOMHash(){const t=document.body.innerHTML.slice(0,1e3),e=`${document.title}|${window.location.href}|${t}`;let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n&=n;return n.toString(16)}async showRecordingIndicator(){this.hideRecordingIndicator();let t=0;try{const e=await chrome.runtime.sendMessage({type:"GET_RECORDING_STATE"});t=e?.stepCount||0,this.stepCounter=t}catch(e){console.warn("AutoFlow: Could not get step count from background, using local count"),t=this.stepCounter}const e=document.createElement("div");e.className="autoflow-recording-indicator",e.innerHTML=`\n      <div id="autoflow-indicator" style="\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: linear-gradient(135deg, #ef4444, #dc2626);\n        color: white;\n        padding: 12px 16px;\n        border-radius: 24px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        font-size: 13px;\n        font-weight: 600;\n        z-index: 999999;\n        box-shadow: 0 6px 20px rgba(239, 68, 68, 0.4);\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        backdrop-filter: blur(10px);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n      ">\n        <div style="\n          width: 10px;\n          height: 10px;\n          background: white;\n          border-radius: 50%;\n          animation: pulse 1.5s infinite;\n        "></div>\n        <span id="autoflow-status">Recording</span>\n        <div style="\n          background: rgba(255, 255, 255, 0.2);\n          padding: 4px 8px;\n          border-radius: 12px;\n          font-size: 11px;\n          font-weight: 700;\n        ">\n          <span id="autoflow-step-count">${t}</span> steps\n        </div>\n      </div>\n    `;const n=document.createElement("style");n.id="autoflow-indicator-styles",n.textContent="\n      @keyframes pulse {\n        0%, 100% { \n          opacity: 1; \n          transform: scale(1);\n        }\n        50% { \n          opacity: 0.7; \n          transform: scale(1.1);\n        }\n      }\n      \n      @keyframes stepHighlight {\n        0% { \n          box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.3);\n        }\n        50% { \n          box-shadow: 0 0 0 4px rgba(34, 197, 94, 0.6);\n        }\n        100% { \n          box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.3);\n        }\n      }\n      \n      .autoflow-element-highlight {\n        outline: 2px solid #22c55e !important;\n        outline-offset: 1px !important;\n        box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.3) !important;\n        animation: stepHighlight 0.4s ease-out !important;\n        transition: box-shadow 0.2s ease !important;\n      }\n    ",document.head.appendChild(n),document.body.appendChild(e)}async updateStepCounter(){try{const t=await chrome.runtime.sendMessage({type:"GET_RECORDING_STATE"}),e=t?.stepCount||0,n=document.getElementById("autoflow-step-count");if(n){n.textContent=e.toString();const t=document.getElementById("autoflow-indicator");t&&(t.style.transform="scale(1.05)",setTimeout(()=>{t.style.transform="scale(1)"},200))}this.stepCounter=e}catch(t){console.error("AutoFlow: Error updating step counter:",t);const e=document.getElementById("autoflow-step-count");e&&(e.textContent=this.stepCounter.toString())}}highlightElement(t){t.classList.add("autoflow-element-highlight"),setTimeout(()=>{t.classList.remove("autoflow-element-highlight")},400)}hideRecordingIndicator(){const t=document.querySelector(".autoflow-recording-indicator");t&&t.remove();const e=document.getElementById("autoflow-indicator-styles");e&&e.remove()}startStepCounterSync(){this.stopStepCounterSync(),this.stepCounterSyncInterval=setInterval(async()=>{this.isRecording&&await this.updateStepCounter()},2e3)}stopStepCounterSync(){this.stepCounterSyncInterval&&(clearInterval(this.stepCounterSyncInterval),this.stepCounterSyncInterval=null)}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new l}):new l})();